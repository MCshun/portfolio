extends layout.pug

block head
  title プロフィール編集
  link(rel="stylesheet", href="/stylesheets/profile.css")
  link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css', type='text/css')
  script(src="https://code.jquery.com/jquery-3.3.1.slim.min.js")
  script.
    $(document).ready(function() {
      $('#favoriteAgent').change(function() {
        var agentImage = $('#favoriteAgent option:selected').data('image');
        $('#agentImage').attr('src', agentImage);
      });
    })
  style.
    .vertical-navbar {
      position: fixed;
      left: 50px; /* 左に隙間を開ける */
      top: 50px; /* 上に隙間を開ける */
      width: 265px;
      height: calc(100% - 40px); /* 上下の隙間を考慮 */
      background-color: #cc0000; /* 赤っぽい背景色に変更 */
      padding-top: 50px;
      display: flex;
      flex-direction: column;
      align-items: center;
      color: white;
      border-radius: 15px; /* 角を丸くする */
      box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1); /* 影を追加して立体感を出す */
    }
    .logo-container {
      display: flex;
      align-items: center;
      margin-bottom: 30px;
    }
    .logo-container img {
      width: 55px; /* ロゴ画像のサイズを調整 */
      height: 55px;
    }
    .logo-container .logo-text {
      font-size: 1.5rem;
      font-weight: bold;
    }
    .vertical-navbar a {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 20px;
      width: 90%;
      text-decoration: none;
      color: white;
      font-size: 1.1rem;
      border-radius: 8px;
      transition: background-color 0.3s;
    }
    .vertical-navbar a:hover {
      background-color: #ff6666; /* ホバー時の背景色 */
    }
    .vertical-navbar .section-divider {
      width: 80%;
      height: 1px;
      background-color: rgba(255, 255, 255, 0.3);
      margin: 20px 0;
    }
    .vertical-navbar .icon {
      font-size: 1.2rem;
    }
    .button-container {
      margin-top: auto;
      display: flex;
      gap: 15px;
      padding-bottom: 70px;
    }
    .button-container a {
      background-color: #ffffff;
      color: #cc0000;
      padding: 10px 50px;
      padding-left: px; /* 左側の余白を増やして右にずらす */
      border-radius: 10px;
      font-size: 1rem;
      text-align: center;
      font-weight: bold;
      display: flex;
      flex-direction: column;
      align-items: center;
      white-space: nowrap;
    }
    .sub_main-container h2,
    .sub_main-container a,
    .sub_main-container p,
    .sub_main-container ul li {
      color: white;
      font-weight: bold;
    }
    .sub_main {
      padding-left: 100px;
    }
    .container, .container h2, .container h3, .container h4, .container p, .container ul li {
      color: white;
      font-weight: bold;
    }
    .profile-container {
      background-color: transparent; /* 背景を透明に設定 */
      padding: 20px; /* 必要に応じてパディングを追加 */
      border-radius: 10px; /* 角を丸くする（オプション） */
      box-shadow: none; /* 影を削除（必要に応じて） */
    }
    .profile-container h1,
    .profile-container label,
    .profile-container button,
    .profile-container select,
    .profile-container input,
    .profile-container textarea {
      color: white; /* 文字色を白に */
      font-weight: bold; /* 文字を太く */
    }

    /* フォームのボタンのスタイルを調整 */
    .profile-container button.btn-primary,
    .profile-container button.btn-secondary {
      font-weight: bold; /* ボタンも太字に */
    }

block main_content
  .top_main
    .container
      // プロフィール編集フォーム
      .profile-container
        h1.text-center.mt-5 【プロフィール編集】
        form(method="POST" action="/profile/edit")
          .form-group
            label(for="discord") Discord
            input.form-control(type="text" id="discord" name="discord" placeholder="Discord" value=json_data.discord)
          .form-group
            label(for="valorantID") ValorantID
            input.form-control(type="text" id="valorantID" name="valorantID" placeholder="ValorantID" value=json_data.valorantID)
          .form-group
            label(for="gender") 性別
            select.form-control(id="gender" name="gender")
              option(value="男" selected=(json_data.gender === '男')) 男
              option(value="女" selected=(json_data.gender === '女')) 女
              option(value="その他" selected=(json_data.gender === 'その他')) その他
          .form-group
            label(for="rank") ランク帯
            input.form-control(type="text" id="rank" name="rank" placeholder="ランク帯" value=json_data.rank)
          .form-group
            label(for="favoriteAgent") 好きなエージェント
            select.form-control(id="favoriteAgent" name="favoriteAgent")
              each agent in agents
                option(value=agent.displayName, data-image=agent.displayIconSmall, selected=(json_data.favoriteAgent === agent.displayName)) #{agent.displayName}
          .form-group
            label(for="comments") コメント
            textarea.form-control(id="comments" name="comments" rows="3" placeholder="コメント")= json_data.comments
          .form-group.text-center
            button.btn.btn-primary(type="submit") 保存
            a.btn.btn-secondary(href="/profile") キャンセル






